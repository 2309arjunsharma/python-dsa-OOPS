## OOPS
Object-Oriented Programming (OOP) is a programming paradigm that uses "objects" to design applications and computer programs. OOPS allows for modeling real-world scenarios using classes and objects.
## CLASS
A class is a blueprint for creating objects. Attributes, methods

## Methods---
## 1.Inheritance
Inheritance is a fundamental concept in OOPS that allows a class to inherit attributes and methods from another class. 
## 2.Polymorphism
Polymorphism is a core concept in OOPS that allows objects of different classes to be treated as objects of a common superclass. It provides a way to perform a single action in different forms.
Polymorphism is typically achieved through method overriding and interfaces
## 3.Method Overriding
Method overriding allows a child class to provide a specific implementation of a method that is already defined in its parent class
## 4. Polymorphism with Abstract Base Classes
Abstract Base Classes (ABCs) are used to defie common methods for a group of related objects. They can enforce that derived classes implement particular methods, promoting consistency across different implementations.
## 5.Conclusion of Polymorphism
Polymorphism is a powerful feature of OOPS that allows for flexibility and integration in code design. It enables a single function to handle objects of different classes, each with its own implementation of a method. By understanding and applying polymorphism, you can create more extensible and maintainable object-oriented programs.
## 6.Encapsulation and Abstraction
Encapsulation and abstraction are two fundamental principles of OOPS that help in designing robust, maintainable, and reusable code. Encapsulation involves bundling data and methods that operate on the data within a single unit, while abstraction involves hiding complex implementation details and exposing only the necessary features.
## 7. Encapsulation
Encapsulation is the concept of wrapping data (variables) and methods(functions) together as a single unit. It restricts direct access to some of the object's components, which is a means of preventing accidental interference and misuse of data
## 8.Abstraction
Abstraction is the concept of hiding the complex implementation details and showing only the necessary features of an object. This helps in reducing programming complexity and effort.